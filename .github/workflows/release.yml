# test
name: Publish package to GitHub Packages
on: 
   push:
       tags:       
         - '*'

jobs:
  publish:
    runs-on: ubuntu-latest 
    permissions: 
      contents: write
      packages: write 
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'zulu'
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b
      - name: Set output
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: Check output
        env:
          VERSION_SEMVER: ${{ steps.vars.outputs.tag }}
        run: |
          echo $VERSION_SEMVER
          echo ${{ steps.vars.outputs.tag }}
      - name: Pull a JavaFX JDK
        run: wget http://static.azul.com/zulu/bin/zulu8.44.0.13-ca-fx-jdk8.0.242-linux_x64.tar.gz
      - name: Set Java
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
          jdkFile: ./zulu8.44.0.13-ca-fx-jdk8.0.242-linux_x64.tar.gz
      - name: Compile 
        run: ./gradlew shadowJar --stacktrace
             
      - name: Make gitHub release
        uses: actions/create-release@v1
        id: create_release
        with:
               draft: false
               prerelease: false
               release_name: ${{ steps.version.outputs.version }}
               tag_name: ${{ github.ref }}
        env:
               GITHUB_TOKEN: ${{ github.token }}
               
      - name: upload jar artifact
        uses: actions/upload-release-asset@v1
        env:
               GITHUB_TOKEN: ${{ github.token }}
        with:
               upload_url: ${{ steps.create_release.outputs.upload_url }}
               asset_path: build/libs/BowlerGame.jar
               asset_name: BowlerGame.jar
               asset_content_type: application/jar  
      - name: upload  Icon
        uses: actions/upload-release-asset@v1
        env:
            GITHUB_TOKEN: ${{ github.token }}
        with:
               upload_url: ${{ steps.create_release.outputs.upload_url }}
               asset_path: ./splash.png
               asset_name: splash.png
               asset_content_type: application/binary
      - name: upload Bash Script
        uses: actions/upload-release-asset@v1
        env:
               GITHUB_TOKEN: ${{ github.token }}
        with:
               upload_url: ${{ steps.create_release.outputs.upload_url }}
               asset_path: ./installer/linux/BowlerGame
               asset_name: BowlerGame
               asset_content_type: application/binary